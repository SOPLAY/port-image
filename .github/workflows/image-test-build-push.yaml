name: image test build and push
on:
  push:
    branches:
      - main
    paths:
      - 'port-app/**'
      - 'nginx/**'
      - 'port-list.txt'
      - 'Dockerfile'
  workflow_dispatch:

env:
  WORKDIR: port-app

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: setup-bun
        uses: oven-sh/setup-bun@v1
      - name: Cache
        uses: actions/cache@v3
        with:
          key: ${{runner.os}}-bun-${{hashFiles('**/bun.lockb')}}
          restore-keys: ${{runner.os}}-bun-
          path: |
            ~/.bun
      - name: install deps
        run: bun i
        working-directory: ${{ env.WORKDIR }}
      - name: run test
        run: bun run test
        working-directory: ${{ env.WORKDIR }}
      - name: build test
        run: bun run build
        working-directory: ${{ env.WORKDIR }}

  get-port-list:
    runs-on: ubuntu-latest
    outputs:
      port-list: ${{ steps.get-port-list.outputs.port-list }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: get port list
        id: get-port-list
        run: echo port-list=$(cat ./port-list.txt) >> $GITHUB_OUTPUT

  image-build-and-push:
    runs-on: ubuntu-latest
    needs: [get-port-list, test]
    strategy:
      matrix:
        port: ['${{ needs.get-port-list.outputs.port-list }}']
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: registry login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          build-args: DEFAULT_PORT=${{ matrix.port }}
          tags: ${{ vars.DOCKER_USERNAME }}/port:${{ matrix.port }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
